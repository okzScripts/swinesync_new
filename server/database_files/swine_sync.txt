CREATE DATABASE swine_sync; 


create type user_role as enum ('service_agent', 'admin', 'super_admin');


create table companies
(
    id          integer generated by default as identity
        constraint companies_pk
            primary key,
    name        text not null,
    email       text not null,
    phone       text,
    description text,
    domain      text, 
    active   bool not null default true 
);    
alter table companies
    add constraint companies_unique_email unique (email),
    add constraint companies_unique_phone unique (phone),
    add constraint companies_unique_domain unique (domain); 
alter table companies
    owner to postgres;



create table products
(
    id                  integer generated by default as identity
        constraint products_pk
            primary key,
    product_name        text not null,
    product_description text,
    price               integer,
    product_category    text,
    company             integer not null
        constraint products_companies_id_fk
            references companies,
    active bool default true not null
);
alter table products
    add constraint products_unique_product_x_company   unique (product_name,company);
alter table products
    owner to postgres;


create table ticket_categories
(
    id            integer generated always as identity
        constraint ticket_categories_pk
            primary key,
    category_name text not null,
    company int not null 
        constraint FK_ticket_categories_companies
        references companies,
    active bool default true not null
);
alter table ticket_categories
    owner to postgres;
alter table ticket_categories
    add constraint ticket_categories_unique_categoryName_x_company   unique (category_name,company);

create table ticket_status
(
    id     integer generated by default as identity
        constraint ticket_status_pk
            primary key,
    status text not null,
        constraint unique_status unique(status) 
);

alter table ticket_status
    owner to postgres;






create table users
(
    id       integer generated always as identity
        constraint users_pk
            primary key,
    name     text not null,
    email    text not null,
    password text not null,
    company integer 
        constraint users_company_fk 
        references companies, 
    role     user_role,
    active   bool not null default true
);
alter table public.users
    add constraint users_unique_email unique (email);
alter table users
    owner to postgres;



create table tickets
(
    id              integer generated always as identity
        constraint tickets_pk
            primary key,
    status          integer not null
        constraint tickets_ticket_status_id_fk
            references ticket_status,
    customer_email       text  not null,
    product_id      integer not null 
        constraint tickets_products_id_fk
            references products,
    customer_agent  integer
        constraint tickets_users_id_fk_2
            references users,
    ticket_category integer not null
        constraint tickets_ticket_categories_id_fk
            references ticket_categories,
    description text, 
    rating numeric(2,1),
    slug text not null default 'im_pig_not_a_slug', 
    constraint tickets_unique_slug unique (slug)
);

alter table tickets
    owner to postgres;




create table customer_agentsxticket_category
(
    ticket_category integer not null
        constraint customer_agentsxticket_category_ticket_categories_id_fk
            references ticket_categories,
    customer_agent  integer not null
        constraint customer_agentsxticket_category_users_id_fk
            references users,
    constraint customer_agentsxticket_category_pk
        primary key (customer_agent, ticket_category)   
);

alter table customer_agentsxticket_category
    owner to postgres;


create table messages(
    id integer generated always as identity
        constraint message_pk
        primary key, 
    text text not null,
    time timestamp, 
    ticket integer 
        constraint FK_message_ticket
            references tickets,
    customer bool, 
    constraint message_unique unique(text,time,ticket)  
);
alter table messages 
    owner to postgres; 
